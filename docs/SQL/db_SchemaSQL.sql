-- MySQL Script generated by MySQL Workbench
-- Mon Jul 24 20:06:11 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dm_changemaker_sb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dm_changemaker_sb` ;

-- -----------------------------------------------------
-- Schema dm_changemaker_sb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dm_changemaker_sb` DEFAULT CHARACTER SET utf8mb4 ;
USE `dm_changemaker_sb` ;

-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`choice_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`choice_list` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`choice_list` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `table_name` VARCHAR(45) NOT NULL,
  `col_name` VARCHAR(45) NOT NULL,
  `choice_value` VARCHAR(45) NULL,
  `choice_label` VARCHAR(128) NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`comment` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`comment` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `post_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post that the comment related to',
  `post_field` VARCHAR(25) NULL COMMENT 'column name in post table: description, factors, obstacles, solutions\nIndicatse the comment is for which field of the post',
  `created_by` BINARY(16) NOT NULL COMMENT 'The user who created the comment',
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`country` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`country` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `country_code` VARCHAR(2) NOT NULL COMMENT 'ISO 3166 2 digits countr code\nhttps://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes',
  `country_name` VARCHAR(128) NULL,
  PRIMARY KEY (`country_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`location` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`location` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `location_type` VARCHAR(45) NOT NULL COMMENT 'ENUM(\'country\',\'province\',\'city\')',
  `name` VARCHAR(128) NOT NULL COMMENT 'county name or city name',
  `country_code` VARCHAR(2) NULL COMMENT 'ISO 3166 2 digits countr code\nhttps://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes',
  `coordinate` POLYGON NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`post` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`post` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `author_id` BINARY(16) NOT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'draft' COMMENT 'status of the post:\nENUM(\'draft\', \'published\', \'inactive\', \'reported\')',
  `title` VARCHAR(255) NOT NULL,
  `location_id` BINARY(16) NULL,
  `description` LONGTEXT NOT NULL,
  `factors` MEDIUMTEXT NULL,
  `obstacles` MEDIUMTEXT NULL,
  `solutions` MEDIUMTEXT NULL,
  `viewed_count` INT NULL DEFAULT 0,
  `visibility` VARCHAR(45) NULL DEFAULT 'public' COMMENT 'ENUM(\'public\',\'private\',\'followers\')',
  `updated_count` INT NULL DEFAULT 0,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`post_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`post_tag` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`post_tag` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `post_id` BINARY(16) NOT NULL,
  `tag_id` BINARY(16) NOT NULL,
  `tag_type` VARCHAR(45) NULL COMMENT 'ENUM(\'sdg\', \'tag\'):\nIndicate this is a releationship between post and tag or post and sdg.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`sdg`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`sdg` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`sdg` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `sdg_number` INT NULL,
  `tag_text` VARCHAR(128) NOT NULL COMMENT 'refer to https://sdgs.un.org/goals',
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `tag_text_UNIQUE` ON `dm_changemaker_sb`.`sdg` (`tag_text` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`tag` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`tag` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `tag_text` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `tag_text_UNIQUE` ON `dm_changemaker_sb`.`tag` (`tag_text` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`user` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`user` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `email` VARCHAR(255) NOT NULL,
  `pwd_hash` VARCHAR(255) NOT NULL COMMENT 'SHA256-based encoding hash',
  `pwd_salt` VARCHAR(50) NOT NULL COMMENT 'a randonm string used for SHA256-based encoding',
  `user_name` VARCHAR(50) NOT NULL COMMENT 'The user handle name.Can be changed by the user.',
  `year_of_birth` YEAR NULL,
  `description` VARCHAR(255) NULL COMMENT 'self-description',
  `profile_image_url` VARCHAR(255) NULL,
  `is_verified` TINYINT(1) NULL DEFAULT 0 COMMENT 'email is verified or not',
  `is_locked` TINYINT(1) NULL DEFAULT 0,
  `location_id` BINARY(16) NOT NULL,
  `user_role` VARCHAR(45) NULL COMMENT 'ENUM(\'registered\', \'moderator\', \'admin\'):\nguest users are not stored in DB.',
  `last_login_time` DATETIME NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE UNIQUE INDEX `email_UNIQUE` ON `dm_changemaker_sb`.`user` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`user_feed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`user_feed` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`user_feed` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `feed_type` VARCHAR(45) NULL COMMENT 'Indicate thie feed is for: following user,  SDG, Tag,or  country',
  `post_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post',
  `is_viewed` TINYINT(1) NULL DEFAULT 0 COMMENT 'Indicates if the feed item is viewed or not.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`user_follows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`user_follows` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`user_follows` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL COMMENT 'sys_id of the user who is being followed',
  `follows_type` VARCHAR(45) NULL COMMENT 'ENUM(\'post\',\'SDG\', \'tag\', \'location\')\nIndicates the user is following  a post,r a SDG, a tag, or a country/location',
  `follows_table` VARCHAR(45) NULL COMMENT 'table name of the following item',
  `follows_id` BINARY(16) NULL COMMENT 'sys_id of the following item in follows_table.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`user_preference`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`user_preference` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`user_preference` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `notify_favourites` TINYINT(1) NULL,
  `notify_tags` TINYINT(1) NULL,
  `notify_countries` TINYINT(1) NULL,
  `user_id` BINARY(16) NOT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dm_changemaker_sb`.`vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dm_changemaker_sb`.`vote` ;

CREATE TABLE IF NOT EXISTS `dm_changemaker_sb`.`vote` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `vote_for` VARCHAR(45) NOT NULL COMMENT 'ENUM(\'post\', \'comment\')\n',
  `vote_for_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post or comment')
ENGINE = InnoDB;

CREATE UNIQUE INDEX `tag_text_UNIQUE` ON `dm_changemaker_sb`.`vote` (`user_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
